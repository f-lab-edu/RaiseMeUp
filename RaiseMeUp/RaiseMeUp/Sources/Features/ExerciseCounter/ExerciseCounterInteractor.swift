//
//  ExerciseCounterInteractor.swift
//  RaiseMeUp
//
//  Created by 홍석현 on 12/14/23.
//  Copyright (c) 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ExerciseCounterBusinessLogic {
    func pullNextRep(request: ExerciseCounter.CountRep.Request)
    func startButtonTapped()
    func countOnePullUp()
}

protocol ExerciseCounterDataStore {
    var routine: [Int] { get set }
}

class ExerciseCounterInteractor: ExerciseCounterBusinessLogic, ExerciseCounterDataStore {
    var routine: [Int] = [] 
    
    var presenter: ExerciseCounterPresentationLogic?
    var worker: ExerciseCounterWorker?
    private var currentRep: Int = 0
    
    func pullNextRep(request: ExerciseCounter.CountRep.Request) {
        guard routine.isEmpty == false else { return }
        
        currentRep = routine.removeFirst()
        let response = ExerciseCounter.CountRep.Response(currentRep: currentRep)
        presenter?.presentCurrentRep(response: response)
    }
    
    func startButtonTapped() {
        currentRep = routine.removeFirst()
        let response = ExerciseCounter.CountRep.Response(currentRep: currentRep)
        presenter?.presentCurrentRep(response: response)
    }
    
    func countOnePullUp() {
        currentRep -= 1
        if currentRep <= 0 {
            startTimer()
        } else {
            let response = ExerciseCounter.CountRep.Response(currentRep: currentRep)
            presenter?.presentCurrentRep(response: response)
        }
    }
    
    func startTimer() {
        print("여기 타이머가 시작됩니다~!")
        let response = ExerciseCounter.Timer.Response(currentTime: "00:01")
        presenter?.presentCurrentRestTime(response: response)
    }
    
    func endTimer() {
        pullNextRep(request: ExerciseCounter.CountRep.Request())
    }
}
